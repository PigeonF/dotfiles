diff --git a/src/parser.ts b/src/parser.ts
index a23e507ab272cb46..19deda8d1b4a4802 100644
--- a/src/parser.ts
+++ b/src/parser.ts
@@ -308,7 +308,7 @@ export class Parser {
 
             const interpolatedConfigurations = JSON.stringify(uninterpolatedConfigurations)
                 .replace(
-                    /(?<firstChar>.)(?<secondChar>.)\$\[\[\s*inputs.(?<interpolationKey>[\w-]+)\s*\|?\s*(?<interpolationFunctions>.*?)\s*\]\](?<lastChar>.)/g // https://regexr.com/81c16
+                    /(?<firstChar>.)?(?<secondChar>.)?\$\[\[\s*inputs.(?<interpolationKey>[\w-]+)\s*\|?\s*(?<interpolationFunctions>.*?)\s*\]\](?<lastChar>[^$])?/g // https://regexr.com/81c16
                     , (_: string, firstChar: string, secondChar: string, interpolationKey: string, interpolationFunctions: string, lastChar: string) => {
                         const configFilePath = path.relative(process.cwd(), filePath);
                         const context = {
@@ -318,6 +318,9 @@ export class Parser {
                             configFilePath,
                             ...ctx,
                         };
+                        firstChar ??= "";
+                        secondChar ??= "";
+                        lastChar ??= "";
 
                         const {inputValue, inputType} = parseIncludeInputs(context);
                         const firstTwoChar = firstChar + secondChar;
diff --git a/tests/test-cases/include-inputs/input-templates/interpolation-repeat/.gitlab-ci-input-template.yml b/tests/test-cases/include-inputs/input-templates/interpolation-repeat/.gitlab-ci-input-template.yml
new file mode 100644
index 0000000000000000..8147fc6fa16d9142
--- /dev/null
+++ b/tests/test-cases/include-inputs/input-templates/interpolation-repeat/.gitlab-ci-input-template.yml
@@ -0,0 +1,8 @@
+---
+spec:
+  inputs:
+    name:
+---
+job $[[ inputs.name ]] $[[ inputs.name ]]:
+  script:
+    - echo $[[ inputs.name ]]$[[ inputs.name ]]
diff --git a/tests/test-cases/include-inputs/input-templates/interpolation-repeat/.gitlab-ci.yml b/tests/test-cases/include-inputs/input-templates/interpolation-repeat/.gitlab-ci.yml
new file mode 100644
index 0000000000000000..3c7ee0217ff52082
--- /dev/null
+++ b/tests/test-cases/include-inputs/input-templates/interpolation-repeat/.gitlab-ci.yml
@@ -0,0 +1,7 @@
+---
+include:
+  - local: "/.gitlab-ci-input-template.yml"
+    inputs:
+      name: foo
+stages:
+  - test
diff --git a/tests/test-cases/include-inputs/integration.include-inputs.test.ts b/tests/test-cases/include-inputs/integration.include-inputs.test.ts
index 182c9bafe11d4f37..880c33a0be78d7db 100644
--- a/tests/test-cases/include-inputs/integration.include-inputs.test.ts
+++ b/tests/test-cases/include-inputs/integration.include-inputs.test.ts
@@ -135,6 +135,25 @@ scan-website:
     expect(writeStreams.stdoutLines[0]).toEqual(expected);
 });
 
+test("include-inputs interpolation repeated", async () => {
+    const writeStreams = new WriteStreamsMock();
+    await handler({
+        cwd: "tests/test-cases/include-inputs/input-templates/interpolation-repeat",
+        preview: true,
+    }, writeStreams);
+
+    const expected = `---
+stages:
+  - .pre
+  - test
+  - .post
+job foo foo:
+  script:
+    - echo foofoo`;
+
+    expect(writeStreams.stdoutLines[0]).toEqual(expected);
+});
+
 test("include-inputs inputs validation for array", async () => {
     try {
         const writeStreams = new WriteStreamsMock();
