[core]
    autocrlf = false
    editor = nvim
    pager = delta
    abbrev = 16
    symlinks = true
    compression = 9
    packedGitLimit = 512m
    packedGitWindowSize = 512m

[pack]
    deltaCacheSize = 2047m
    packSizeLimit = 2047m
    windowMemory = 2047m

[alias]
    aliases = config --get-regexp ^alias.
    branches = branch -vv
    bd = branch -d
    bD = branch -D
    c = commit
    ca = commit --amend
    can = commit --amend --no-edit
    cc = "!f() { git commit -e -F \"$(git rev-parse --show-toplevel)/.git/COMMIT_EDITMSG\" $@; }; f"
    cm = commit -m
    cl = clone --recurse-submodules
    d = diff --color
    ds = diff --color --cached
    fixup-signatures = rebase --exec 'git commit --amend --no-edit -n -S --allow-empty' -i
    ignore = update-index --skip-worktree
    l = lrm
    ls = lrsm
    lg = lrgm
    lr = log --pretty=pretty --abbrev-commit --date=relative
    lrm = log --pretty=pretty --abbrev-commit --date=relative main...@
    lrg = lr --pretty=pretty --abbrev-commit --date=relative --graph
    lrgm = lr --pretty=pretty --abbrev-commit --date=relative --graph main...@
    lrs = log --pretty=pretty-sig --abbrev-commit --date=relative
    lrsm = log --pretty=pretty-sig --abbrev-commit --date=relative main...@
    ll = log --pretty=pretty --abbrev-commit --date=local
    llg = ll --graph
    lls = log --pretty=pretty-sig --abbrev-commit --date=local
    la = llast 1
    llast = "!f() { git l HEAD...HEAD~$1; }; f"
    purge = clean -dx -e "*.gitignored.*"
    root = rev-parse --show-toplevel
    s = status -s
    undo = reset --soft HEAD~1
    unignore = update-index --no-skip-worktree

[commit]
    verbose = true
    gpgsign = true

[tag]
    gpgsign = true

[diff]
    colorMoved = default
    colorMovedWS = "allow-indentation-change"

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[init]
    defaultBranch = main

[interactive]
    diffFilter = delta --color-only

[merge]
    conflictstyle = diff3
    tool = meld
    guitool = meld
    ff = no

[pretty]
    pretty = format:%C(yellow)%h%C(reset) %C(bold white)?%C(reset) %C(bold blue)%an%C(reset) %s %C(green)(%ad)%C(reset) %C(magenta)%d%C(reset)
    pretty-sig = format:%C(yellow)%h%C(reset) %C(bold white)%G?%C(reset) %C(bold blue)%an%C(reset) %s %C(green)(%ad)%C(reset) %C(magenta)%d%C(reset)

[pull]
    ff = only
    rebase = true

[push]
    default = current

[rebase]
    autosquash = true
    missingCommitsCheck = error

[status]
    short = true
    branch = true

[submodule]
    recurse = true

[tag]
    sort = -version:refname

[user]
    useConfigOnly = true

[versionsort]
    suffix = -init
    suffix = -rc

[gpg]
    format = ssh

[gpg "ssh"]
    allowedSignersFile = ~/.ssh/allowed_signers

[user]
    name = Jonas Fierlings
    email = fnoegip@gmail.com
    signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID+2wAQrbFDe18oFY2Mv6qsUcYWJZPAcsV+Xr4ZHzncL

#
# External Programs
#

[delta]
    dark = true
    navigate = true
    line-numbers = true
    hyperlinks = true
    features = decorations

[delta "decorations"]
    commit-style = raw
    file-style = omit
    hunk-header-style = file line-number syntax

[stgit "edit"]
    verbose = true

[stgit "alias"]
    l = series -d
    list = series -d

[branchless "core"]
    mainBranch = "main"

[branchless "test"]
    strategy = worktree
    jobs = 0

[branchless "test.alias"]
    # !Only works with worktrees!
    # We not only have to map the worktree itself, but also the 'commondir',
    # which is hopefully more or less stable across git branchless versions.
    gcl = "gitlab-ci-local --concurrency=1 --volume \"$(git rev-parse --path-format=absolute --git-common-dir):$(git rev-parse --path-format=absolute --git-common-dir):ro\""
    gclp = "gitlab-ci-local --privileged --concurrency=1 --volume \"$(git rev-parse --path-format=absolute --git-common-dir):$(git rev-parse --path-format=absolute --git-common-dir):ro\""

[branchless "next"]
    interactive = true

# vim: set ft=gitconfig
